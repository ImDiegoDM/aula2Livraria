{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "Livraria Store"
  },
  "host": "localhost:10010",
  "basePath": "/",
  "tags": [
    {
      "name": "Book",
      "description": "Book releated end points",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/books": {
      "x-swagger-router-controller": "books",
      "get": {
        "tags":[
          "Book"
        ],
        "description": "Return books of the store",
        "operationId": "getBooks",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search term for books can be title, author, category or publisher",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Actual page",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        }
      },
      "post":{
        "tags":[
          "Book"
        ],
        "description":"Create a book on the store",
        "operationId": "addBook",
        "parameters":[
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/BookPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/books/{bookId}": {
      "x-swagger-router-controller": "books",
      "get": {
        "tags":[
          "Book"
        ],
        "description": "Return a book",
        "operationId": "getBook",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "Id of the book to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put":{
        "tags":[
          "Book"
        ],
        "description":"Edit a book on the store",
        "operationId": "editBook",
        "parameters":[
          {
            "name": "bookId",
            "in": "path",
            "description": "Id of the book to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/BookPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "400":{
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "Book"
        ],
        "description":"Delete a book on the store",
        "operationId": "deleteBook",
        "parameters":[
          {
            "name": "bookId",
            "in": "path",
            "description": "Id of the book to delete",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400":{
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/books/{bookId}/comments": {
      "x-swagger-router-controller": "books",
      "get": {
        "tags":[
          "Book"
        ],
        "description": "Return the comments of a book",
        "operationId": "getBookComments",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "Id of the book to return the comments",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Actual page",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put":{
        "tags":[
          "Book"
        ],
        "description":"Add a comment to this book",
        "operationId": "editBookComment",
        "parameters":[
          {
            "name": "bookId",
            "in": "path",
            "description": "Id of the book to commnet",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/BookPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "400":{
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/authors": {
      "x-swagger-router-controller": "books",
      "get": {
        "tags":[
          "Author"
        ],
        "description": "Return authors of the store",
        "operationId": "getAuthors",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Actual page",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Authors"
            }
          }
        }
      },
      "post":{
        "tags":[
          "Author"
        ],
        "description":"Create a book on the store",
        "operationId": "addAuthor",
        "parameters":[
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/AuthorPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/authors/{authorId}": {
      "x-swagger-router-controller": "author",
      "get": {
        "tags":[
          "Author"
        ],
        "description": "Return a author",
        "operationId": "getAuthor",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "description": "Id of the author to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put":{
        "tags":[
          "Author"
        ],
        "description":"Edit a author on the store",
        "operationId": "editAuthor",
        "parameters":[
          {
            "name": "authorId",
            "in": "path",
            "description": "Id of the author to edit",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/AuthorPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "400":{
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "Author"
        ],
        "description":"delete a author on the store",
        "operationId": "deleteAuthor",
        "parameters":[
          {
            "name": "authorId",
            "in": "path",
            "description": "Id of the author to delete",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          }
        }
      }
    },
    "/v1/authors/{authorId}/books": {
      "x-swagger-router-controller": "author",
      "get": {
        "tags":[
          "Author"
        ],
        "description": "Return the author books",
        "operationId": "getAuthorBooks",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "description": "Id of the author to return its books",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Actual page",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/publishers": {
      "x-swagger-router-controller": "books",
      "get": {
        "tags":[
          "Publisher"
        ],
        "description": "Return publishers of the store",
        "operationId": "getPublishers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Actual page",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Publishers"
            }
          }
        }
      },
      "post":{
        "tags":[
          "Publisher"
        ],
        "description":"Create a publisher on the store",
        "operationId": "addAuthor",
        "parameters":[
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/PublisherPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/publishers/{publisherId}": {
      "x-swagger-router-controller": "author",
      "get": {
        "tags":[
          "Publisher"
        ],
        "description": "Return a publisher",
        "operationId": "getpublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "description": "Id of the publisher to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PubCompany"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put":{
        "tags":[
          "Publisher"
        ],
        "description":"Edit a publisher on the store",
        "operationId": "editpublisher",
        "parameters":[
          {
            "name": "publisherId",
            "in": "path",
            "description": "Id of the publisher to edit",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/PublisherPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "400":{
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "Publisher"
        ],
        "description":"delete a publisher on the store",
        "operationId": "deletePubliser",
        "parameters":[
          {
            "name": "publisherId",
            "in": "path",
            "description": "Id of the publisher to delete",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          }
        }
      }
    },
    "/v1/publishers/{publisherId}/books": {
      "x-swagger-router-controller": "author",
      "get": {
        "tags":[
          "Publisher"
        ],
        "description": "Return the publisher books",
        "operationId": "getPublisherBooks",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "description": "Id of the author to return its books",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Actual page",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        }
      }
    },
    "/v1/users":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "User"
        ],
        "description": "Return the users of the store",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Actual page",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post":{
        "tags":[
          "User"
        ],
        "description":"Create a user on the store",
        "operationId": "addUser",
        "parameters":[
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/UserPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/users/{userId}":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "User"
        ],
        "description": "Return a users of the store",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put":{
        "tags":[
          "User"
        ],
        "description":"Edit a user on the store",
        "operationId": "editUser",
        "parameters":[
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to edit",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/UserPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "User"
        ],
        "description":"Delete a user on the store",
        "operationId": "deleteUser",
        "parameters":[
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to delete",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          }
        }
      }
    },
    "/v1/users/{userId}/carts":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "User"
        ],
        "description": "Return the users cart",
        "operationId": "getcart",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to return its cart",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put":{
        "tags":[
          "User"
        ],
        "description":"Edit user cart",
        "operationId": "editUserCart",
        "parameters":[
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to edit its cart",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/CartPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/users/{userId}/orders":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "User"
        ],
        "description": "Return the users orders",
        "operationId": "getUserOrder",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to return its orders",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post":{
        "tags":[
          "User"
        ],
        "description":"Add a order for this user",
        "operationId": "addUserOrder",
        "parameters":[
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to add its order",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body. obs: address_id or address should be sended",
            "required": true,
            "schema":{
              "$ref": "#/definitions/OrderPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/users/{userId}/comments":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "User"
        ],
        "description": "Return the users comments",
        "operationId": "getUserComments",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user to return its comments",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/carts":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "Carts"
        ],
        "description": "Return the carts of the store",
        "operationId": "getCarts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Carts"
            }
          }
        }
      }
    },
    "/v1/orders":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "Order"
        ],
        "description": "Return the users orders",
        "operationId": "getOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          }
        }
      }
    },
    "/v1/orders/{orderId}":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "Order"
        ],
        "description": "Return the users orders",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Id of the order to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "Order"
        ],
        "description":"Delete a order on the store",
        "operationId": "deleteOrder",
        "parameters":[
          {
            "name": "orderId",
            "in": "path",
            "description": "Id of the order to delete",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          }
        }
      }
    },
    "/v1/orders/{orderId}/adresses":{
      "x-swagger-router-controller": "user",
      "put": {
        "tags":[
          "Order"
        ],
        "description": "Edit the address of this orders",
        "operationId": "editAddressOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Id of the order to edit its address",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/AddressPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/orders/{orderId}/deliver-status":{
      "x-swagger-router-controller": "user",
      "put": {
        "tags":[
          "Order"
        ],
        "description": "Edit the deliver status of this orders",
        "operationId": "editDeliverrStatusOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Id of the order to edit its deliver status",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/DeliverStatusPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/comments":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "Comment"
        ],
        "description": "return all comments of this store",
        "operationId": "getComments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        }
      }
    },
    "/v1/comments/{commentId}":{
      "x-swagger-router-controller": "user",
      "get": {
        "tags":[
          "Comment"
        ],
        "description": "return a comment",
        "operationId": "getComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "Id of the comment to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags":[
          "Comment"
        ],
        "description": "Edit the comment",
        "operationId": "editComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "Id of the comment to edit",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "required": true,
            "schema":{
              "$ref": "#/definitions/CommentPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Altered with success",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400":{
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404":{
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete":{
        "tags":[
          "Comment"
        ],
        "description":"Delete a comment on the store",
        "operationId": "deleteComment",
        "parameters":[
          {
            "name": "commentId",
            "in": "path",
            "description": "Id of the comment to delete",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          }
        }
      }
    },
    "/swagger": {
      "x-swagger-pipe": "swagger_raw"
    }
  },
  "definitions": {
    "CartPost":{
      "properties":{
        "books_ids":{
          "type":"array",
          "xml": {
            "name": "books",
            "wrapped": true
          },
          "items": {
            "type": "number"
          }
        }
      }
    },
    "Carts": {
      "required": [],
      "properties": {
        "pages": {
            "type": "number"
        },
        "actualPage": {
            "type": "number"
        },
        "nextPage": {
            "type": "string"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/CartWithUri"
          }
        }
      }
    },
    "Cart":{
      "properties":{
        "id":{
          "type":"number"
        },
        "user":{
          "$ref":"#/definitions/UserWithUri"
        },
        "books": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/BookWithUri"
          }
        },
        "totalPrice":{
          "type":"number"
        }
      }
    },
    "CartWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "user":{
          "$ref":"#/definitions/UserWithUri"
        },
        "books": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/BookWithUri"
          }
        },
        "totalPrice":{
          "type":"number"
        },
        "cart_uri":{
          "type":"string"
        }
      }
    },
    "AddressPost":{
      "properties":{
        "cep":{
          "type":"string"
        },
        "street":{
          "type":"string"
        },
        "neighborhood":{
          "type":"string"
        },
        "city":{
          "type":"string"
        },
        "state":{
          "type":"string"
        }
      }
    },
    "DeliverStatusPost":{
      "properties":{
        "status":{
          "type":"string"
        }
      }
    },
    "DeliverStatus":{
      "properties":{
        "id":{
          "type":"number"
        },
        "status":{
          "type":"string"
        }
      }
    },
    "Address":{
      "properties":{
        "id":{
          "type":"number"
        },
        "cep":{
          "type":"string"
        },
        "street":{
          "type":"string"
        },
        "neighborhood":{
          "type":"string"
        },
        "city":{
          "type":"string"
        },
        "state":{
          "type":"string"
        }
      }
    },
    "Order":{
      "properties":{
        "id":{
          "type":"number"
        },
        "status":{
          "type":"string"
        },
        "user":{
          "$ref":"#/definitions/UserWithUri"
        },
        "address":{
          "$ref":"#/definitions/Address"
        },
        "deliver_status":{
          "$ref":"#/definitions/DeliverStatus"
        },
        "books": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/BookWithUri"
          }
        },
        "total_price":{
          "type":"number"
        }
      }
    },
    "OrderPost":{
      "required":[
        "cart_id"
      ],
      "properties":{
        "cart_id":{
          "type":"number"
        },
        "address_id":{
          "type":"number"
        },
        "address":{
          "$ref":"#/definitions/AddressPost" 
        }
      }
    },
    "OrderWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "status":{
          "type":"string"
        },
        "user":{
          "$ref":"#/definitions/UserWithUri"
        },
        "address":{
          "$ref":"#/definitions/Address"
        },
        "deliver_status":{
          "$ref":"#/definitions/DeliverStatus"
        },
        "books": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/BookWithUri"
          }
        },
        "total_price":{
          "type":"number"
        },
        "order_uri":{
          "type":"string"
        }
      }
    },
    "Author":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
          "type":"string"
        }
      }
    },
    "AuthorWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
          "type":"string"
        },
        "author_uri":{
          "type":"string"
        }
      }
    },
    "AuthorPost":{
      "required":[
        "name"
      ],
      "properties":{
        "name":{
          "type":"string"
        }
      }
    },
    "PubCompany":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
         "type":"string" 
        }
      }
    },
    "PublisherPost":{
      "required":[
        "name"
      ],
      "properties":{
        "name":{
         "type":"string" 
        }
      }
    },
    "PubCompanyWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
         "type":"string" 
        },
        "pub_company_uri":{
          "type":"string"
        }
      }
    },
    "Category":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
         "type":"string" 
        }
      }
    },
    "CategoryWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
         "type":"string" 
        },
        "catgory_uri":{
          "type":"string" 
         }
      }
    },
    "BookPost":{
      "required": [
        "name",
        "author_id",
        "pub_company_id",
        "category_id",
        "price",
        "year"
      ],
      "properties":{
        "name":{
          "type":"string"
        },
        "author_id":{
          "type":"number"
        },
        "pub_company_id":{
          "type":"number"
        },
        "category_id":{
          "type":"number"
        },
        "price":{
          "type":"number"
        },
        "year":{
          "type":"number"
        }
      }
    },
    "Book":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
          "type":"number"
        },
        "author":{
          "$ref":"#/definitions/AuthorWithUri"
        },
        "pub_company":{
          "$ref":"#/definitions/PubCompanyWithUri"
        },
        "category":{
          "$ref":"#/definitions/CategoryWithUri"
        },
        "price":{
          "type":"number"
        },
        "year":{
          "type":"number"
        }
      }
    },
    "BookWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "author":{
          "$ref":"#/definitions/AuthorWithUri"
        },
        "pub_company":{
          "$ref":"#/definitions/PubCompanyWithUri"
        },
        "category":{
          "$ref":"#/definitions/CategoryWithUri"
        },
        "name":{
          "type":"number"
        },
        "price":{
          "type":"number"
        },
        "year":{
          "type":"string"
        },
        "livro_uri":{
          "type":"string"
        }
      }
    },
    "User":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
          "type":"string"
        },
        "cpf":{
          "type":"string"
        }
      }
    },
    "UserPost":{
      "properties":{
        "name":{
          "type":"string"
        },
        "cpf":{
          "type":"string"
        }
      }
    },
    "UserWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "name":{
          "type":"string"
        },
        "cpf":{
          "type":"string"
        },
        "user_uri":{
          "type":"string"
        }
      }
    },
    "Orders": {
      "required": [],
      "properties": {
        "pages": {
            "type": "number"
        },
        "actualPage": {
            "type": "number"
        },
        "nextPage": {
            "type": "string"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/OrderWithUri"
          }
        }
      }
    },
    "Comment":{
      "properties":{
        "comment":{
          "type":"string"
        },
        "stars":{
          "type":"number"
        },
        "user":{
          "$ref":"#/definitions/UserWithUri"
        },
        "book":{
          "$ref":"#/definitions/BookWithUri"
        }
      }
    },
    "CommentWithUri":{
      "properties":{
        "id":{
          "type":"number"
        },
        "comment":{
          "type":"string"
        },
        "stars":{
          "type":"number"
        },
        "user":{
          "$ref":"#/definitions/UserWithUri"
        },
        "book":{
          "$ref":"#/definitions/BookWithUri"
        },
        "comment_uri":{
          "type":"string"
        }
      }
    },
    "Publishers": {
      "required": [],
      "properties": {
        "pages": {
            "type": "number"
        },
        "actualPage": {
            "type": "number"
        },
        "nextPage": {
            "type": "string"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/PubCompanyWithUri"
          }
        }
      }
    },
    "Users": {
      "required": [],
      "properties": {
        "pages": {
            "type": "number"
        },
        "actualPage": {
            "type": "number"
        },
        "nextPage": {
            "type": "string"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/UserWithUri"
          }
        }
      }
    },
    "Comments": {
      "required": [],
      "properties": {
        "pages": {
            "type": "number"
        },
        "actualPage": {
            "type": "number"
        },
        "nextPage": {
            "type": "string"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/CommentWithUri"
          }
        }
      }
    },
    "Authors": {
      "required": [],
      "properties": {
        "pages": {
            "type": "number"
        },
        "actualPage": {
            "type": "number"
        },
        "nextPage": {
            "type": "string"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/AuthorWithUri"
          }
        }
      }
    },
    "Books": {
      "required": [],
      "properties": {
        "pages": {
            "type": "number"
        },
        "actualPage": {
            "type": "number"
        },
        "nextPage": {
            "type": "string"
        },
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/BookWithUri"
          }
        }
      }
    },
    "ErrorResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "DeleteResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}